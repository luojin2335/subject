<!--
  为input标签绑定input事件 绑定关键字bindinput
  如何获取输入框的值  通过事件源对象获取 e.detail.value值为输入框值
  把输入框的值赋值到data中 this.setdata({ num:e.detail.value})
  加入点击事件(无法在小程序当中的事件中直接传参)  bindtap  通过自定义属性传参,可在事件源中获取自定义属性
  -->
<!--<input type="text" bindinput="hinput"/>
<button bindtap="htap" data-operation="{{1}}">+</button>
<button bindtap="htap" data-operation="{{-1}}">-</button>
<view>{{num}}</view>
<view>文字</view>
<view>pages/study3/study3.wxml</view>-->
<!--
  1 长按文字复制 selectable (&nbsp;为空格)
  2 对文本内容进行解码
<text selectable decode>你上当了&nbsp; nb&lt;
</text>-->
<!--
   image图片标签
     1.src 指定要加载的图片路径 图片存在默认宽高 320*240
     2.mode 决定图片内容如何和图片标签 宽高做适配
       scaleTofill 默认值 不保持纵横比播放图片，使图片宽高完全拉伸至填满image元素
       aspectfile 保持宽高比 确保图片的长边显示出来 常用于页面轮播图
       aspectfill 保持宽高比 确保图片的短边显示出来 较少用
       widthfix 宽度指定后高度自己按比例调整 常用
       剩余前往文档查看
    3.小程序当中的图片直接支持懒加载 lazy-load 当图片出现在视口上下三屏的高度之内时，自己开始加载图片
-->
<image mode="widthfix" src="https://i.loli.net/2021/11/12/9mFSenX8pxgDLhY.jpg" />
/*
   小程序中不需要主动引入样式文件 
   需要把页面中某些元素的单位由px改为rpx

 */
 /*
 view{
   width: 200rpx;
   height: 200rpx;
   font-size: 40rpx;
   background-color: aquamarine;
 }*/
 /*引入的代码通过 @import 来引入，路径只能写相对路径
 @import "../../styles/common.wxss";*/
 image{
   box-sizing: border-box;
   border: 1px solid darkorange;
   width: 300px;
   height: 200px;
 }
   hinput(e){
    //console.log(e.detail.value);
    this.setData({ num: e.detail.value})
    //D要大写！！！！！！
  },
  htap(e){
//console.log(e);
  //获取自定义属性 operation
  const operation=e.currentTarget.dataset.operation;
  //T要大写！！！！！！
  this.setData({ 
    num: this.data.num+operation
  })
  },
